<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-200</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>swayStepX = 1;
swayStepY = 1;
swayX = 0;
swayY = 0;
swayXMax = 20;
swayYMax = 16;
swayXState = 0;
swayYState = 1;
swayDelayXMax = 8;
swayDelayX = 0;
swayDelayYMax = 16;
swayDelayY = swayDelayYMax/2;
swayAlteredStateX = 0;
swayAlteredStateY = 0;
swayAlter = 0;
swayNormal = 1;
swayMultiplier = 4;
swayMultiplierMinX = 13;
swayMultiplierMaxX = 18;
swayMultiplierMinY = 13;
swayMultiplierMaxY = 18;
swayMultiplierCyclesMinX = 5;
swayMultiplierCyclesMaxX = 20;
swayMultiplierCyclesMinY = 5;
swayMultiplierCyclesMaxY = 20;
spawnMin = 5;
spawnMax = 11;
spawnLevelMin = 1;
spawnLevelMax = 4;
spawnCount = round(random_range(spawnMin, spawnMax));
spawnCycle = 0;
spawnLevel = round(random_range(spawnLevelMin, spawnLevelMax));
spawnCycleState = 0;
leafCycle=0;
leafCycleMax = 16;
throttle = 0;
completeLeafCycles = 0;
leafCycleRate = 20;
leafCycleCap = 4;
leafCycleCap = leafCycleCap mod (leafCycleMax + 1);
playerStunLock = 0;
leafStunLock = 60;
booCoolDown = 0;
booCoolDownWaitFrames = 60;
flashingControlFrames = 30;
spawnGhostChance = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.humanScore + global.deathScore &gt;= 25)
{
    room_goto( u_ded_ROOM );
}

if (joystick_check_button(1,1)) 
{
    swayAlteredStateX = round(random_range(swayMultiplierCyclesMinX, swayMultiplierCyclesMaxX));
    swayAlteredStateY = round(random_range(swayMultiplierCyclesMinY, swayMultiplierCyclesMaxY));  
}
if (joystick_check_button(1,2)) 
{
    throttle = 10; 
    player_OBJ.image_speed = 1.5; 
}
else
{
    throttle = 0;
    player_OBJ.image_speed = 0.75; 
}
if (joystick_check_button(1,3)) 
{
    xtraLeaves = 1; 
}
else
{
    xtraLeaves = 0; 
}
if (joystick_check_button(1,4) &amp;&amp; booCoolDown &lt;= 0) 
{
    booCoolDown = booCoolDownWaitFrames;
    audio_play_sound ( wall_run_scream_SND,  0, false); 
}
if (leafCycle == ceil(leafCycleMax - completeLeafCycles/leafCycleRate) )
{
    leafCycle = -1;
    if (xtraLeaves = 1)
    {
        instance_create(random_range(512, 2048), 192, hazard_OBJ); 
        if (completeLeafCycles+2 &lt; leafCycleMax*(leafCycleRate-leafCycleCap))
        {
            completeLeafCycles+=3; 
        }  
    }
    instance_create(random_range(512, 2048), 192, hazard_OBJ);
    if (completeLeafCycles &lt; leafCycleMax*(leafCycleRate-leafCycleCap))
    {
        completeLeafCycles++;
    }
}
leafCycle++;

if( swayXState == 0)
{
    swayX += swayStepX;
    if (swayX == 0)
    {
        if (swayAlteredStateX &gt; 0)
        {
            //player_OBJ.x++;
            swayStepX = round(random_range(swayMultiplierMinX, swayMultiplierMaxX));
            swayAlteredStateX--;
        }
        else
        {
            swayStepX = swayNormal;        
        }
    }
    if (swayX &gt;= swayXMax)
    {
        swayXState = 1;
        swayDelayX = swayDelayXMax;
    }
    
}
else if ( swayXState == 2)
{
    swayX -= swayStepX;
    if (swayX == 0)
    {
        if (swayAlteredStateX &gt; 0)
        {
            //player_OBJ.x--;
            swayStepX = round(random_range(swayMultiplierMinX, swayMultiplierMaxX));
            swayAlteredStateX--;
        }
        else
        {
            swayStepX = swayNormal;        
        }
    }
    if (swayX &lt;= -swayXMax)
    {
        swayXState = 3;
        swayDelayX = swayDelayXMax;
    }
}
else
{
    swayDelayX -= swayStepX;
    if (swayDelayX &lt;= 0)
    {
        if(swayXState == 1)
        {
            swayXState = 2;
        }
        else
        {
            swayXState = 0;
        }
    }
}
if( swayYState == 0)
{
    swayY += swayStepY;
    if (swayY == 0)
    {
        if (swayAlteredStateY &gt; 0)
        {
            //player_OBJ.y++;
            swayStepY = round(random_range(swayMultiplierMinY, swayMultiplierMaxY));
            swayAlteredStateY--;
        }
        else
        {
            swayStepY = swayNormal;        
        }
    }
    if (swayY &gt;= swayYMax)
    {
        swayYState = 1;
        swayDelayY = swayDelayYMax;
    }
}
else if( swayYState == 2)
{
    swayY -= swayStepY;
    if (swayY == 0)
    {
        if (swayAlteredStateY &gt; 0)
        {
            //player_OBJ.y--;
            swayStepY = round(random_range(swayMultiplierMinY, swayMultiplierMaxY));
            swayAlteredStateY--;
        }
        else
        {
            swayStepY = swayNormal;        
        }
    }
    if (swayY &lt;= -swayYMax)
    {
        swayYState = 3;
        swayDelayY = swayDelayYMax;
    }
}
else
{
    swayDelayY -= swayStepY;
    if (swayDelayY &lt;= 0)
    {
        if(swayYState == 1)
        {
            swayYState = 2;
        }
        else
        {
            swayYState = 0;
        }
    }
}
if (spawnCycle == 0)
{
    if (spawnCount &gt; 0 )
    {
        if (spawnCycleState == 0)
        {
            if (swayAlteredStateY == swayAlteredStateY) //0
            {
                //instance_create(2048 - swayX, 256 + 128 * spawnLevel - swayY, wall_run_genric_platform_obj);
                //instance_create(2048 - swayX - spawnCount, 256 + 128 * spawnLevel - swayY - spawnCount, wall_run_platform_OBJ);
                if (round(random_range(0,20)) == 1)
                {
                    //instance_create(2048 - swayX - spawnCount, 224 + 128 * spawnLevel - swayY - spawnCount, wall_run_ghost_OBJ);
                }
                //instance_create(2048 - swayX - spawnCount, 224 + 128 * spawnLevel - swayY - spawnCount, wall_run_ghost_OBJ);
                
            }
        }
        spawnCount--;
    }
    else
    {
        spawnCount = round(random_range(spawnMin, spawnMax));
        
        spawnLevel = round(random_range(spawnLevelMin, spawnLevelMax));
        i = 1;
        //instance = instance_create(2048 - swayX, 256 + 128 * spawnLevel - swayY, wall_run_genric_platform_obj);
        //instance.sprite_index = wall_run_raft_1_SPR;
        //instance.mask_index = wall_run_raft_1_SPR;
        spawnCycleState++;
        spawnCycleState = spawnCycleState mod 2;
        if (spawnCycleState == 0)
        {
            instance_create(2048 - swayX, 256 + 128 * spawnLevel - swayY, wall_run_platform_OBJ);
            while (spawnCount &gt; i)
            {
                instance_create(2048 - swayX + 32 * i, 256 + 128 * spawnLevel - swayY, wall_run_genric_platform_obj);
                if (round(random_range(0, spawnGhostChance)) == 1)
                {
                    instance_create(2048 - swayX + 32 * i, 224 + 128 * spawnLevel - swayY , wall_run_ghost_OBJ);
                }
                i++; 
            }
        }
    }
}
spawnCycle++;
spawnCycle = spawnCycle mod 4;
if (playerStunLock &gt; 0)
{
    playerStunLock--;
}
if (booCoolDown &gt;0)
{
    booCoolDown--;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>booCoolDown</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>30</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>501</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_draw_sprite</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>5</kind>
            <sprite>wall_run_boo_jump_scare_SPR</sprite>
          </argument>
          <argument>
            <kind>0</kind>
            <string>512</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>192</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text_transformed( 532, 202, "Death Jr.: "+string(global.humanScore), 2.5, 2.5, 0 );
draw_text_transformed( 1322, 202, "Death: "+string(global.deathScore), 2.5, 2.5, 0 );

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
